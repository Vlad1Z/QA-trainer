{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AppQuiz',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      currentQuestion: null,\n      currentQuestionIndex: 0,\n      currentQuestionNumber: 1,\n      totalQuestions: 20,\n      shuffledAnswers: [],\n      selectedAnswer: '',\n      isAnswerCorrect: false,\n      isAnswerSelected: false\n    };\n  },\n  watch: {\n    questions: {\n      immediate: true,\n      handler(newQuestions) {\n        if (newQuestions && newQuestions.length > 0) {\n          this.currentQuestion = newQuestions[this.currentQuestionIndex];\n          this.shuffleAnswers(); // Перемешивание ответов\n        }\n      }\n    }\n  },\n  methods: {\n    async fetchQuestions() {\n      // Определяем диапазон сложности на основе текущего индекса вопроса\n      let minDifficulty, maxDifficulty;\n      if (this.currentQuestionIndex < 5) {\n        minDifficulty = 1;\n        maxDifficulty = 19;\n      } else if (this.currentQuestionIndex < 13) {\n        minDifficulty = 20;\n        maxDifficulty = 49;\n      } else if (this.currentQuestionIndex < 18) {\n        minDifficulty = 50;\n        maxDifficulty = 69;\n      } else {\n        minDifficulty = 70;\n        maxDifficulty = 79;\n      }\n      try {\n        const response = await axios.get(`http://localhost:3000/api/questions/filtered-questions?minDifficulty=${minDifficulty}&maxDifficulty=${maxDifficulty}`);\n        this.questions = response.data;\n        this.currentQuestion = this.questions[0]; // Предполагается, что сервер вернул массив вопросов\n        this.shuffleAnswers();\n      } catch (error) {\n        console.error(\"There was an error fetching the questions:\", error);\n      }\n    }\n    // ... другие методы ...\n  }\n};","map":{"version":3,"names":["axios","name","props","questions","type","Array","required","data","currentQuestion","currentQuestionIndex","currentQuestionNumber","totalQuestions","shuffledAnswers","selectedAnswer","isAnswerCorrect","isAnswerSelected","watch","immediate","handler","newQuestions","length","shuffleAnswers","methods","fetchQuestions","minDifficulty","maxDifficulty","response","get","error","console"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\components\\AppQuiz.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz\" v-if=\"currentQuestion\">\r\n    <h2>Вопрос {{ currentQuestionNumber }} из {{ totalQuestions }}</h2>\r\n    <h3>{{ currentQuestion.question }}</h3>\r\n    <ul>\r\n      <li v-for=\"(answer, index) in shuffledAnswers\" \r\n          :key=\"index\" \r\n          :class=\"{ correct: isAnswerSelected && answer === currentQuestion.correct_answer, wrong: isAnswerSelected && selectedAnswer === answer && selectedAnswer !== currentQuestion.correct_answer }\"\r\n          @click=\"selectAnswer(answer)\"\r\n          :disabled=\"isAnswerSelected\">\r\n        {{ answer }}\r\n      </li>\r\n    </ul>\r\n    <p v-if=\"isAnswerSelected\">{{ resultMessage }}</p>\r\n    <button v-if=\"isAnswerSelected && currentQuestionIndex < questions.length - 1\" @click=\"nextQuestion\">Следующий вопрос</button>\r\n  </div>\r\n  <div v-else>\r\n    <p>Загрузка вопросов...</p>\r\n    <!-- Можно добавить индикатор загрузки -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AppQuiz',\r\n  props: {\r\n    questions: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentQuestion: null,\r\n      currentQuestionIndex: 0,\r\n      currentQuestionNumber: 1,\r\n      totalQuestions: 20,\r\n      shuffledAnswers: [],\r\n      selectedAnswer: '',\r\n      isAnswerCorrect: false,\r\n      isAnswerSelected: false,\r\n    };\r\n  },\r\n  watch: {\r\n    questions: {\r\n      immediate: true,\r\n      handler(newQuestions) {\r\n        if (newQuestions && newQuestions.length > 0) {\r\n          this.currentQuestion = newQuestions[this.currentQuestionIndex];\r\n          this.shuffleAnswers(); // Перемешивание ответов\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchQuestions() {\r\n      // Определяем диапазон сложности на основе текущего индекса вопроса\r\n      let minDifficulty, maxDifficulty;\r\n      if (this.currentQuestionIndex < 5) {\r\n        minDifficulty = 1; maxDifficulty = 19;\r\n      } else if (this.currentQuestionIndex < 13) {\r\n        minDifficulty = 20; maxDifficulty = 49;\r\n      } else if (this.currentQuestionIndex < 18) {\r\n        minDifficulty = 50; maxDifficulty = 69;\r\n      } else {\r\n        minDifficulty = 70; maxDifficulty = 79;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/api/questions/filtered-questions?minDifficulty=${minDifficulty}&maxDifficulty=${maxDifficulty}`);\r\n        this.questions = response.data;\r\n        this.currentQuestion = this.questions[0]; // Предполагается, что сервер вернул массив вопросов\r\n        this.shuffleAnswers();\r\n      } catch (error) {\r\n        console.error(\"There was an error fetching the questions:\", error);\r\n      }\r\n    },\r\n    // ... другие методы ...\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  /* Существующие стили */\r\n</style>\r\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBC,oBAAoB,EAAE,CAAC;MACvBC,qBAAqB,EAAE,CAAC;MACxBC,cAAc,EAAE,EAAE;MAClBC,eAAe,EAAE,EAAE;MACnBC,cAAc,EAAE,EAAE;MAClBC,eAAe,EAAE,KAAK;MACtBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLb,SAAS,EAAE;MACTc,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,YAAY,EAAE;QACpB,IAAIA,YAAW,IAAKA,YAAY,CAACC,MAAK,GAAI,CAAC,EAAE;UAC3C,IAAI,CAACZ,eAAc,GAAIW,YAAY,CAAC,IAAI,CAACV,oBAAoB,CAAC;UAC9D,IAAI,CAACY,cAAc,CAAC,CAAC,EAAE;QACzB;MACF;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB;MACA,IAAIC,aAAa,EAAEC,aAAa;MAChC,IAAI,IAAI,CAAChB,oBAAmB,GAAI,CAAC,EAAE;QACjCe,aAAY,GAAI,CAAC;QAAEC,aAAY,GAAI,EAAE;MACvC,OAAO,IAAI,IAAI,CAAChB,oBAAmB,GAAI,EAAE,EAAE;QACzCe,aAAY,GAAI,EAAE;QAAEC,aAAY,GAAI,EAAE;MACxC,OAAO,IAAI,IAAI,CAAChB,oBAAmB,GAAI,EAAE,EAAE;QACzCe,aAAY,GAAI,EAAE;QAAEC,aAAY,GAAI,EAAE;MACxC,OAAO;QACLD,aAAY,GAAI,EAAE;QAAEC,aAAY,GAAI,EAAE;MACxC;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM1B,KAAK,CAAC2B,GAAG,CAAE,wEAAuEH,aAAc,kBAAiBC,aAAc,EAAC,CAAC;QACxJ,IAAI,CAACtB,SAAQ,GAAIuB,QAAQ,CAACnB,IAAI;QAC9B,IAAI,CAACC,eAAc,GAAI,IAAI,CAACL,SAAS,CAAC,CAAC,CAAC,EAAE;QAC1C,IAAI,CAACkB,cAAc,CAAC,CAAC;MACvB,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF;IACA;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}