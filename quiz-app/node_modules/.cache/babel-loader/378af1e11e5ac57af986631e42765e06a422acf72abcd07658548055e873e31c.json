{"ast":null,"code":"import Home from './components/Home.vue';\nimport axios from 'axios';\nexport default {\n  name: 'QuizApp',\n  components: {\n    Home\n    // Другие компоненты, если они есть\n  },\n  data() {\n    return {\n      isTestStarted: false,\n      questions: [],\n      currentQuestion: null,\n      currentQuestionIndex: 0,\n      currentQuestionNumber: 1,\n      totalQuestions: 20,\n      // Общее количество вопросов\n      shuffledAnswers: [],\n      selectedAnswer: '',\n      isAnswerCorrect: false,\n      isAnswerSelected: false\n    };\n  },\n  computed: {\n    resultMessage() {\n      return this.isAnswerCorrect ? 'Правильный ответ' : 'Неправильный ответ';\n    }\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions').then(response => {\n        this.questions = response.data;\n        this.currentQuestion = this.questions[this.currentQuestionIndex];\n        this.shuffleAnswers();\n      }).catch(error => {\n        console.error(\"There was an error fetching the questions:\", error);\n      });\n    },\n    shuffleAnswers() {\n      if (this.currentQuestion && this.currentQuestion.answers) {\n        this.shuffledAnswers = this.shuffleArray(this.currentQuestion.answers);\n      }\n    },\n    shuffleArray(array) {\n      let currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n      return array;\n    },\n    selectAnswer(answer) {\n      if (!this.isAnswerSelected) {\n        this.isAnswerSelected = true;\n        this.selectedAnswer = answer;\n        this.isAnswerCorrect = answer === this.currentQuestion.correct_answer;\n      }\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n        this.currentQuestionNumber++;\n        this.currentQuestion = this.questions[this.currentQuestionIndex];\n        this.shuffleAnswers();\n        this.resetAnswer();\n      }\n    },\n    resetAnswer() {\n      this.isAnswerSelected = false;\n      this.selectedAnswer = '';\n      this.isAnswerCorrect = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["Home","axios","name","components","data","isTestStarted","questions","currentQuestion","currentQuestionIndex","currentQuestionNumber","totalQuestions","shuffledAnswers","selectedAnswer","isAnswerCorrect","isAnswerSelected","computed","resultMessage","methods","fetchQuestions","get","then","response","shuffleAnswers","catch","error","console","answers","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","selectAnswer","answer","correct_answer","nextQuestion","resetAnswer","mounted"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <Home v-if=\"!isTestStarted\" @startTest=\"isTestStarted = true\" />\n    <div v-else class=\"quiz\">\n      <h2>Вопрос {{ currentQuestionNumber }} из {{ totalQuestions }}</h2>\n      <h3>{{ currentQuestion.question }}</h3>\n      <ul>\n        <li \n          v-for=\"(answer, index) in shuffledAnswers\" \n          :key=\"index\" \n          :class=\"{ correct: isAnswerSelected && answer === currentQuestion.correct_answer, wrong: isAnswerSelected && selectedAnswer === answer && selectedAnswer !== currentQuestion.correct_answer }\"\n          @click=\"selectAnswer(answer)\"\n          :disabled=\"isAnswerSelected\"\n        >\n          {{ answer }}\n        </li>\n      </ul>\n      <p v-if=\"isAnswerSelected\">{{ resultMessage }}</p>\n      <button v-if=\"isAnswerSelected && currentQuestionIndex < questions.length - 1\" @click=\"nextQuestion\">Следующий вопрос</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Home from './components/Home.vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'QuizApp',\n  components: {\n    Home,\n    // Другие компоненты, если они есть\n  },\n  data() {\n    return {\n      isTestStarted: false,\n      questions: [],\n      currentQuestion: null,\n      currentQuestionIndex: 0,\n      currentQuestionNumber: 1,\n      totalQuestions: 20, // Общее количество вопросов\n      shuffledAnswers: [],\n      selectedAnswer: '',\n      isAnswerCorrect: false,\n      isAnswerSelected: false,\n    };\n  },\n  computed: {\n    resultMessage() {\n      return this.isAnswerCorrect ? 'Правильный ответ' : 'Неправильный ответ';\n    },\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions')\n        .then(response => {\n          this.questions = response.data;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n          this.shuffleAnswers();\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the questions:\", error);\n        });\n    },\n    shuffleAnswers() {\n      if (this.currentQuestion && this.currentQuestion.answers) {\n        this.shuffledAnswers = this.shuffleArray(this.currentQuestion.answers);\n      }\n    },\n    shuffleArray(array) {\n      let currentIndex = array.length, temporaryValue, randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    },\n    selectAnswer(answer) {\n      if (!this.isAnswerSelected) {\n        this.isAnswerSelected = true;\n        this.selectedAnswer = answer;\n        this.isAnswerCorrect = answer === this.currentQuestion.correct_answer;\n      }\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n        this.currentQuestionNumber++;\n        this.currentQuestion = this.questions[this.currentQuestionIndex];\n        this.shuffleAnswers();\n        this.resetAnswer();\n      }\n    },\n    resetAnswer() {\n      this.isAnswerSelected = false;\n      this.selectedAnswer = '';\n      this.isAnswerCorrect = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n}\n</script>\n\n<style>\n.correct {\n  color: green;\n}\n\n.wrong {\n  color: red;\n}\n\nbutton[disabled] {\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}