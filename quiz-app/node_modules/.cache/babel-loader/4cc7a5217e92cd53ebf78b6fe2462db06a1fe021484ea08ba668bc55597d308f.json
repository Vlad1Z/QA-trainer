{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\", \"disabled\"];\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.currentQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.currentQuestion.question), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.currentQuestion.answers, (answer, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass({\n        correct: $data.isAnswerSelected && answer === $data.currentQuestion.correct_answer,\n        wrong: $data.isAnswerSelected && $data.selectedAnswer === answer && $data.selectedAnswer !== $data.currentQuestion.correct_answer\n      }),\n      onClick: $event => $options.selectAnswer(answer),\n      disabled: $data.isAnswerSelected\n    }, _toDisplayString(answer), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.isAnswerSelected ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($options.resultMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.isAnswerSelected ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.nextQuestion && $options.nextQuestion(...args))\n  }, \"Следующий вопрос\")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","currentQuestion","_hoisted_2","_createElementVNode","_toDisplayString","question","_Fragment","_renderList","answers","answer","index","_normalizeClass","correct","isAnswerSelected","correct_answer","wrong","selectedAnswer","onClick","$event","$options","selectAnswer","disabled","_hoisted_3","_hoisted_4","resultMessage","_createCommentVNode","_cache","args","nextQuestion"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"quiz\">\n    <div v-if=\"currentQuestion\">\n      <h2>{{ currentQuestion.question }}</h2>\n      <ul>\n        <li \n          v-for=\"(answer, index) in currentQuestion.answers\" \n          :key=\"index\" \n          :class=\"{ correct: isAnswerSelected && answer === currentQuestion.correct_answer, wrong: isAnswerSelected && selectedAnswer === answer && selectedAnswer !== currentQuestion.correct_answer }\"\n          @click=\"selectAnswer(answer)\"\n          :disabled=\"isAnswerSelected\"\n        >\n          {{ answer }}\n        </li>\n      </ul>\n      <p v-if=\"isAnswerSelected\">{{ resultMessage }}</p>\n      <button v-if=\"isAnswerSelected\" @click=\"nextQuestion\">Следующий вопрос</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'QuizApp',\n  data() {\n    return {\n      questions: [],\n      currentQuestion: null,\n      currentQuestionIndex: 0,\n      selectedAnswer: '',\n      isAnswerCorrect: false,\n      isAnswerSelected: false,\n    };\n  },\n  computed: {\n    resultMessage() {\n      return this.isAnswerCorrect ? 'Правильный ответ' : 'Неправильный ответ';\n    },\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions')\n        .then(response => {\n          this.questions = response.data;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the questions:\", error);\n        });\n    },\n    selectAnswer(answer) {\n      if (!this.isAnswerSelected) {\n        this.isAnswerSelected = true;\n        this.selectedAnswer = answer;\n        this.isAnswerCorrect = answer === this.currentQuestion.correct_answer;\n      }\n    },\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n        this.currentQuestion = this.questions[this.currentQuestionIndex];\n        this.resetAnswer();\n      }\n    },\n    resetAnswer() {\n      this.isAnswerSelected = false;\n      this.selectedAnswer = '';\n      this.isAnswerCorrect = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n}\n</script>\n\n<style>\n.correct {\n  color: green;\n}\n\n.wrong {\n  color: red;\n}\n\nbutton[disabled] {\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EADnBC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBOC,KAAA,CAAAC,eAAe,I,cAA1BH,mBAAA,CAeM,OAjBVI,UAAA,GAGMC,mBAAA,CAAuC,YAAAC,gBAAA,CAAhCJ,KAAA,CAAAC,eAAe,CAACI,QAAQ,kBAC/BF,mBAAA,CAUK,c,kBATHL,mBAAA,CAQKQ,SAAA,QAbbC,WAAA,CAMoCP,KAAA,CAAAC,eAAe,CAACO,OAAO,EAN3D,CAMkBC,MAAM,EAAEC,KAAK;yBADvBZ,mBAAA,CAQK;MANFD,GAAG,EAAEa,KAAK;MACVd,KAAK,EARhBe,eAAA;QAAAC,OAAA,EAQ6BZ,KAAA,CAAAa,gBAAgB,IAAIJ,MAAM,KAAKT,KAAA,CAAAC,eAAe,CAACa,cAAc;QAAAC,KAAA,EAASf,KAAA,CAAAa,gBAAgB,IAAIb,KAAA,CAAAgB,cAAc,KAAKP,MAAM,IAAIT,KAAA,CAAAgB,cAAc,KAAKhB,KAAA,CAAAC,eAAe,CAACa;MAAc;MAC1LG,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACX,MAAM;MAC1BY,QAAQ,EAAErB,KAAA,CAAAa;wBAERJ,MAAM,gCAZnBa,UAAA;oCAeetB,KAAA,CAAAa,gBAAgB,I,cAAzBf,mBAAA,CAAkD,KAfxDyB,UAAA,EAAAnB,gBAAA,CAeoCe,QAAA,CAAAK,aAAa,oBAfjDC,mBAAA,gBAgBoBzB,KAAA,CAAAa,gBAAgB,I,cAA9Bf,mBAAA,CAA+E;IAhBrFD,GAAA;IAgBuCoB,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAS,YAAA,IAAAT,QAAA,CAAAS,YAAA,IAAAD,IAAA,CAAY;KAAE,kBAAgB,KAhB5EF,mBAAA,e,KAAAA,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}