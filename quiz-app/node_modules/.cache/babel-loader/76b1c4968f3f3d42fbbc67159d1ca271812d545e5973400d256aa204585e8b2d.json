{"ast":null,"code":"import Header from './components/AppHeader.vue';\nimport Home from './components/StartPage.vue';\nimport Quiz from './components/AppQuiz.vue';\nimport Footer from './components/AppFooter.vue';\nexport default {\n  name: 'QuizApp',\n  components: {\n    Header,\n    Home,\n    Quiz,\n    Footer\n  },\n  data() {\n    return {\n      isTestStarted: false,\n      questions: [] // Убедитесь, что у вас есть это состояние для хранения вопросов\n    };\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions').then(response => {\n        this.questions = response.data;\n      }).catch(error => {\n        console.error(\"There was an error fetching the questions:\", error);\n      });\n    },\n    startTest() {\n      this.fetchQuestions();\n      this.isTestStarted = true;\n    }\n  },\n  // Если вы хотите сразу загрузить вопросы при загрузке страницы, вы можете вызвать fetchQuestions в mounted:\n  mounted() {\n    // this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["Header","Home","Quiz","Footer","name","components","data","isTestStarted","questions","methods","fetchQuestions","axios","get","then","response","catch","error","console","startTest","mounted"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <Header /> <!-- Шапка сайта -->\n    <Home v-if=\"!isTestStarted\" @startTest=\"isTestStarted = true\" /> <!-- Приветственная страница -->\n    <Quiz v-else :questions=\"questions\" /> <!-- Компонент викторины -->\n    <Footer /> <!-- Подвал сайта -->\n  </div>\n</template>\n\n<script>\nimport Header from './components/AppHeader.vue';\nimport Home from './components/StartPage.vue';\nimport Quiz from './components/AppQuiz.vue';\nimport Footer from './components/AppFooter.vue';\n\nexport default {\n  name: 'QuizApp',\n  components: {\n    Header,\n    Home,\n    Quiz,\n    Footer\n  },\n  data() {\n    return {\n      isTestStarted: false,\n      questions: [], // Убедитесь, что у вас есть это состояние для хранения вопросов\n    };\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions')\n        .then(response => {\n          this.questions = response.data;\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the questions:\", error);\n        });\n    },\n    startTest() {\n      this.fetchQuestions();\n      this.isTestStarted = true;\n    }\n  },\n  // Если вы хотите сразу загрузить вопросы при загрузке страницы, вы можете вызвать fetchQuestions в mounted:\n  mounted() {\n    // this.fetchQuestions();\n  }\n}\n</script>"],"mappings":"AAUA,OAAOA,MAAK,MAAO,4BAA4B;AAC/C,OAAOC,IAAG,MAAO,4BAA4B;AAC7C,OAAOC,IAAG,MAAO,0BAA0B;AAC3C,OAAOC,MAAK,MAAO,4BAA4B;AAE/C,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACVL,MAAM;IACNC,IAAI;IACJC,IAAI;IACJC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE,EAAE,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACfC,KAAK,CAACC,GAAG,CAAC,qCAAqC,EAC5CC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACN,SAAQ,GAAIM,QAAQ,CAACR,IAAI;MAChC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE,CAAC,CAAC;IACN,CAAC;IACDE,SAASA,CAAA,EAAG;MACV,IAAI,CAACR,cAAc,CAAC,CAAC;MACrB,IAAI,CAACH,aAAY,GAAI,IAAI;IAC3B;EACF,CAAC;EACD;EACAY,OAAOA,CAAA,EAAG;IACR;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}