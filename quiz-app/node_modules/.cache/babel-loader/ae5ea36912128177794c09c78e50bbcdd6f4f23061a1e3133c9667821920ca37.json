{"ast":null,"code":"import axios from 'axios';\nimport Question from './components/Question.vue'; // Указываем правильный путь\n\nexport default {\n  name: 'AppQuiz',\n  // Имя компонента должно быть многословным\n  components: {\n    Question\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestion: null,\n      currentQuestionIndex: 0,\n      selectedAnswer: '',\n      isAnswerCorrect: false,\n      isAnswerSelected: false\n    };\n  },\n  computed: {\n    resultMessage() {\n      return this.isAnswerCorrect ? 'Правильный ответ' : 'Неправильный ответ';\n    }\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions') // Путь к вашему API\n      .then(response => {\n        this.questions = response.data;\n        this.currentQuestion = this.questions[this.currentQuestionIndex];\n      }).catch(error => {\n        console.error(\"There was an error fetching the questions:\", error);\n      });\n    },\n    selectAnswer(answer) {\n      this.isAnswerSelected = true;\n      this.selectedAnswer = answer;\n      this.isAnswerCorrect = answer === this.currentQuestion.correct_answer;\n\n      // Логика перехода к следующему вопросу\n      if (this.isAnswerCorrect && this.currentQuestionIndex < this.questions.length - 1) {\n        setTimeout(() => {\n          this.currentQuestionIndex++;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n          this.resetAnswer();\n        }, 2000); // задержка 2 секунды\n      }\n    },\n    resetAnswer() {\n      this.isAnswerSelected = false;\n      this.selectedAnswer = '';\n      this.isAnswerCorrect = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["axios","Question","name","components","data","questions","currentQuestion","currentQuestionIndex","selectedAnswer","isAnswerCorrect","isAnswerSelected","computed","resultMessage","methods","fetchQuestions","get","then","response","catch","error","console","selectAnswer","answer","correct_answer","length","setTimeout","resetAnswer","mounted"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"quiz\">\n    <div v-if=\"currentQuestion\">\n      <h2>{{ currentQuestion.question }}</h2>\n      <ul>\n        <li \n          v-for=\"(answer, index) in currentQuestion.answers\" \n          :key=\"index\" \n          :class=\"{ correct: isAnswerCorrect && selectedAnswer === answer, wrong: !isAnswerCorrect && selectedAnswer === answer }\"\n          @click=\"selectAnswer(answer)\"\n        >\n          {{ answer }}\n        </li>\n      </ul>\n      <p v-if=\"isAnswerSelected\">{{ resultMessage }}</p>\n    </div>\n    <div v-else>\n      <Question v-for=\"question in questions\" :key=\"question._id\" :question=\"question\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Question from './components/Question.vue'; // Указываем правильный путь\n\nexport default {\n  name: 'AppQuiz', // Имя компонента должно быть многословным\n  components: {\n    Question\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestion: null,\n      currentQuestionIndex: 0,\n      selectedAnswer: '',\n      isAnswerCorrect: false,\n      isAnswerSelected: false,\n    };\n  },\n  computed: {\n    resultMessage() {\n      return this.isAnswerCorrect ? 'Правильный ответ' : 'Неправильный ответ';\n    },\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions') // Путь к вашему API\n        .then(response => {\n          this.questions = response.data;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the questions:\", error);\n        });\n    },\n    selectAnswer(answer) {\n      this.isAnswerSelected = true;\n      this.selectedAnswer = answer;\n      this.isAnswerCorrect = answer === this.currentQuestion.correct_answer;\n\n      // Логика перехода к следующему вопросу\n      if(this.isAnswerCorrect && this.currentQuestionIndex < this.questions.length - 1) {\n        setTimeout(() => {\n          this.currentQuestionIndex++;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n          this.resetAnswer();\n        }, 2000); // задержка 2 секунды\n      }\n    },\n    resetAnswer() {\n      this.isAnswerSelected = false;\n      this.selectedAnswer = '';\n      this.isAnswerCorrect = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n}\n</script>\n\n<style>\n.correct {\n  color: green;\n}\n\n.wrong {\n  color: red;\n}\n</style>\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,2BAA2B,EAAE;;AAElD,eAAe;EACbC,IAAI,EAAE,SAAS;EAAE;EACjBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,eAAe,EAAE,IAAI;MACrBC,oBAAoB,EAAE,CAAC;MACvBC,cAAc,EAAE,EAAE;MAClBC,eAAe,EAAE,KAAK;MACtBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,eAAc,GAAI,kBAAiB,GAAI,oBAAoB;IACzE;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACfd,KAAK,CAACe,GAAG,CAAC,qCAAqC,EAAE;MAAA,CAC9CC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACZ,SAAQ,GAAIY,QAAQ,CAACb,IAAI;QAC9B,IAAI,CAACE,eAAc,GAAI,IAAI,CAACD,SAAS,CAAC,IAAI,CAACE,oBAAoB,CAAC;MAClE,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE,CAAC,CAAC;IACN,CAAC;IACDE,YAAYA,CAACC,MAAM,EAAE;MACnB,IAAI,CAACZ,gBAAe,GAAI,IAAI;MAC5B,IAAI,CAACF,cAAa,GAAIc,MAAM;MAC5B,IAAI,CAACb,eAAc,GAAIa,MAAK,KAAM,IAAI,CAAChB,eAAe,CAACiB,cAAc;;MAErE;MACA,IAAG,IAAI,CAACd,eAAc,IAAK,IAAI,CAACF,oBAAmB,GAAI,IAAI,CAACF,SAAS,CAACmB,MAAK,GAAI,CAAC,EAAE;QAChFC,UAAU,CAAC,MAAM;UACf,IAAI,CAAClB,oBAAoB,EAAE;UAC3B,IAAI,CAACD,eAAc,GAAI,IAAI,CAACD,SAAS,CAAC,IAAI,CAACE,oBAAoB,CAAC;UAChE,IAAI,CAACmB,WAAW,CAAC,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC,EAAE;MACZ;IACF,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAChB,gBAAe,GAAI,KAAK;MAC7B,IAAI,CAACF,cAAa,GAAI,EAAE;MACxB,IAAI,CAACC,eAAc,GAAI,KAAK;IAC9B;EACF,CAAC;EACDkB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,cAAc,CAAC,CAAC;EACvB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}