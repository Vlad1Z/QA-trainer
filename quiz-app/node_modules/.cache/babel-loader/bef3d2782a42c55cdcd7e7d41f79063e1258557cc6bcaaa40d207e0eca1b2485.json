{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz\"\n};\nconst _hoisted_2 = [\"onClick\", \"disabled\"];\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Вопрос \" + _toDisplayString($data.currentQuestionNumber) + \" из \" + _toDisplayString($data.totalQuestions), 1 /* TEXT */), _createElementVNode(\"h3\", null, _toDisplayString($data.currentQuestion.question), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.shuffledAnswers, (answer, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass({\n        correct: $data.isAnswerSelected && answer === $data.currentQuestion.correct_answer,\n        wrong: $data.isAnswerSelected && $data.selectedAnswer === answer && $data.selectedAnswer !== $data.currentQuestion.correct_answer\n      }),\n      onClick: $event => _ctx.selectAnswer(answer),\n      disabled: $data.isAnswerSelected\n    }, _toDisplayString(answer), 11 /* TEXT, CLASS, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.isAnswerSelected ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString(_ctx.resultMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.isAnswerSelected && $data.currentQuestionIndex < $props.questions.length - 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.nextQuestion && _ctx.nextQuestion(...args))\n  }, \"Следующий вопрос\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","currentQuestionNumber","totalQuestions","currentQuestion","question","_Fragment","_renderList","shuffledAnswers","answer","index","_normalizeClass","correct","isAnswerSelected","correct_answer","wrong","selectedAnswer","onClick","$event","_ctx","selectAnswer","disabled","_hoisted_2","_hoisted_3","resultMessage","_createCommentVNode","currentQuestionIndex","$props","questions","length","_cache","args","nextQuestion"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\components\\AppQuiz.vue"],"sourcesContent":["<template>\r\n    <div class=\"quiz\">\r\n      <h2>Вопрос {{ currentQuestionNumber }} из {{ totalQuestions }}</h2>\r\n      <h3>{{ currentQuestion.question }}</h3>\r\n      <ul>\r\n        <li v-for=\"(answer, index) in shuffledAnswers\" \r\n            :key=\"index\" \r\n            :class=\"{ correct: isAnswerSelected && answer === currentQuestion.correct_answer, wrong: isAnswerSelected && selectedAnswer === answer && selectedAnswer !== currentQuestion.correct_answer }\"\r\n            @click=\"selectAnswer(answer)\"\r\n            :disabled=\"isAnswerSelected\">\r\n          {{ answer }}\r\n        </li>\r\n      </ul>\r\n      <p v-if=\"isAnswerSelected\">{{ resultMessage }}</p>\r\n      <button v-if=\"isAnswerSelected && currentQuestionIndex < questions.length - 1\" @click=\"nextQuestion\">Следующий вопрос</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Quiz',\r\n    props: {\r\n      questions: Array\r\n      // Другие пропсы, если они нужны\r\n    },\r\n    data() {\r\n      return {\r\n        currentQuestion: null,\r\n        currentQuestionIndex: 0,\r\n        currentQuestionNumber: 1,\r\n        totalQuestions: 20,\r\n        shuffledAnswers: [],\r\n        selectedAnswer: '',\r\n        isAnswerCorrect: false,\r\n        isAnswerSelected: false,\r\n      };\r\n    },\r\n    // Методы для управления логикой викторины (selectAnswer, nextQuestion и т.д.)\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  /* Стили для компонента Quiz */\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAM;mBADrB;;EAAAC,GAAA;AAAA;;uBACIC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAAmE,YAA/D,SAAO,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,qBAAqB,IAAG,MAAI,GAAAF,gBAAA,CAAGC,KAAA,CAAAE,cAAc,kBAC3DJ,mBAAA,CAAuC,YAAAC,gBAAA,CAAhCC,KAAA,CAAAG,eAAe,CAACC,QAAQ,kBAC/BN,mBAAA,CAQK,c,kBAPHF,mBAAA,CAMKS,SAAA,QAXbC,WAAA,CAKsCN,KAAA,CAAAO,eAAe,EALrD,CAKoBC,MAAM,EAAEC,KAAK;yBAAzBb,mBAAA,CAMK;MALAD,GAAG,EAAEc,KAAK;MACVf,KAAK,EAPlBgB,eAAA;QAAAC,OAAA,EAO+BX,KAAA,CAAAY,gBAAgB,IAAIJ,MAAM,KAAKR,KAAA,CAAAG,eAAe,CAACU,cAAc;QAAAC,KAAA,EAASd,KAAA,CAAAY,gBAAgB,IAAIZ,KAAA,CAAAe,cAAc,KAAKP,MAAM,IAAIR,KAAA,CAAAe,cAAc,KAAKf,KAAA,CAAAG,eAAe,CAACU;MAAc;MAC1LG,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,YAAY,CAACX,MAAM;MAC1BY,QAAQ,EAAEpB,KAAA,CAAAY;wBACVJ,MAAM,gCAVnBa,UAAA;oCAaerB,KAAA,CAAAY,gBAAgB,I,cAAzBhB,mBAAA,CAAkD,KAbxD0B,UAAA,EAAAvB,gBAAA,CAaoCmB,IAAA,CAAAK,aAAa,oBAbjDC,mBAAA,gBAcoBxB,KAAA,CAAAY,gBAAgB,IAAIZ,KAAA,CAAAyB,oBAAoB,GAAGC,MAAA,CAAAC,SAAS,CAACC,MAAM,Q,cAAzEhC,mBAAA,CAA8H;IAdpID,GAAA;IAcsFqB,OAAK,EAAAa,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,IAAA,CAAAa,YAAA,IAAAb,IAAA,CAAAa,YAAA,IAAAD,IAAA,CAAY;KAAE,kBAAgB,KAd3HN,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}