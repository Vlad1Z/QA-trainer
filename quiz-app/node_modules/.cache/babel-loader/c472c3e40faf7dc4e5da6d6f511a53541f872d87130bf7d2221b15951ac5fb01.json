{"ast":null,"code":"import axios from 'axios'; // Убедитесь, что axios импортирован\nimport Header from './components/AppHeader.vue';\nimport Home from './components/StartPage.vue';\nimport Quiz from './components/AppQuiz.vue';\nimport Footer from './components/AppFooter.vue';\nexport default {\n  name: 'QuizApp',\n  components: {\n    Header,\n    Home,\n    Quiz,\n    Footer\n  },\n  data() {\n    return {\n      isTestStarted: false,\n      questions: [],\n      currentQuestionIndex: 0 // Добавлен индекс текущего вопроса\n    };\n  },\n  methods: {\n    fetchQuestions() {\n      // Получаем индекс текущего вопроса\n      const index = this.currentQuestionIndex;\n      axios.get(`http://localhost:3000/api/questions?index=${index}`).then(response => {\n        this.questions = response.data;\n        this.currentQuestion = this.questions[0]; // Предполагаем, что сервер возвращает массив вопросов\n        // Вызов метода для перемешивания ответов, если он у вас есть\n      }).catch(error => {\n        console.error(\"There was an error fetching the questions:\", error);\n      });\n    },\n    startTest() {\n      this.fetchQuestions(); // Запускаем загрузку вопросов при начале теста\n      this.isTestStarted = true; // Переключаем флаг только после начала загрузки вопросов\n    }\n    // Возможно, вам понадобятся другие методы для управления состоянием теста\n  },\n  // Подключаем метод fetchQuestions при создании компонента, если нужно загрузить вопросы сразу\n  mounted() {\n    // this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["axios","Header","Home","Quiz","Footer","name","components","data","isTestStarted","questions","currentQuestionIndex","methods","fetchQuestions","index","get","then","response","currentQuestion","catch","error","console","startTest","mounted"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <Header /> <!-- Шапка сайта -->\n    <Home v-if=\"!isTestStarted\" @startTest=\"startTest\" /> <!-- Приветственная страница -->\n    <Quiz v-else :questions=\"questions\" /> <!-- Компонент викторины -->\n    <Footer /> <!-- Подвал сайта -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Убедитесь, что axios импортирован\nimport Header from './components/AppHeader.vue';\nimport Home from './components/StartPage.vue';\nimport Quiz from './components/AppQuiz.vue';\nimport Footer from './components/AppFooter.vue';\n\nexport default {\n  name: 'QuizApp',\n  components: {\n    Header,\n    Home,\n    Quiz,\n    Footer\n  },\n  data() {\n    return {\n      isTestStarted: false,\n      questions: [],\n      currentQuestionIndex: 0, // Добавлен индекс текущего вопроса\n    };\n  },\n  methods: {\n    fetchQuestions() {\n      // Получаем индекс текущего вопроса\n      const index = this.currentQuestionIndex;\n\n      axios.get(`http://localhost:3000/api/questions?index=${index}`)\n        .then(response => {\n          this.questions = response.data;\n          this.currentQuestion = this.questions[0]; // Предполагаем, что сервер возвращает массив вопросов\n          // Вызов метода для перемешивания ответов, если он у вас есть\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the questions:\", error);\n        });\n    },\n    startTest() {\n      this.fetchQuestions(); // Запускаем загрузку вопросов при начале теста\n      this.isTestStarted = true; // Переключаем флаг только после начала загрузки вопросов\n    },\n    // Возможно, вам понадобятся другие методы для управления состоянием теста\n  },\n  // Подключаем метод fetchQuestions при создании компонента, если нужно загрузить вопросы сразу\n  mounted() {\n    // this.fetchQuestions();\n  },\n}\n</script>\n"],"mappings":"AAUA,OAAOA,KAAI,MAAO,OAAO,EAAE;AAC3B,OAAOC,MAAK,MAAO,4BAA4B;AAC/C,OAAOC,IAAG,MAAO,4BAA4B;AAC7C,OAAOC,IAAG,MAAO,0BAA0B;AAC3C,OAAOC,MAAK,MAAO,4BAA4B;AAE/C,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACVL,MAAM;IACNC,IAAI;IACJC,IAAI;IACJC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE,EAAE;MACbC,oBAAoB,EAAE,CAAC,CAAE;IAC3B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf;MACA,MAAMC,KAAI,GAAI,IAAI,CAACH,oBAAoB;MAEvCV,KAAK,CAACc,GAAG,CAAE,6CAA4CD,KAAM,EAAC,EAC3DE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACP,SAAQ,GAAIO,QAAQ,CAACT,IAAI;QAC9B,IAAI,CAACU,eAAc,GAAI,IAAI,CAACR,SAAS,CAAC,CAAC,CAAC,EAAE;QAC1C;MACF,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE,CAAC,CAAC;IACN,CAAC;IACDE,SAASA,CAAA,EAAG;MACV,IAAI,CAACT,cAAc,CAAC,CAAC,EAAE;MACvB,IAAI,CAACJ,aAAY,GAAI,IAAI,EAAE;IAC7B;IACA;EACF,CAAC;EACD;EACAc,OAAOA,CAAA,EAAG;IACR;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}