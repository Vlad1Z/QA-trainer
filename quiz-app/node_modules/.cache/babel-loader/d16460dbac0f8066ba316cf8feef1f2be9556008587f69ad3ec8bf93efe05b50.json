{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Question = _resolveComponent(\"Question\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, question => {\n    return _openBlock(), _createBlock(_component_Question, {\n      key: question._id,\n      question: question\n    }, null, 8 /* PROPS */, [\"question\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","questions","question","_createBlock","_component_Question","key","_id"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"quiz\">\n    <Question v-for=\"question in questions\" :key=\"question._id\" :question=\"question\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Question from './components/Question.vue'; // Убедитесь, что путь правильный\n\nexport default {\n  name: 'QuizApp', // Исправлено на многословное имя\n  components: {\n    Question\n  },\n  data() {\n    return {\n      questions: []\n    };\n  },\n  mounted() {\n    axios.get('http://localhost:3000/api/questions') // Путь к вашему API\n      .then(response => {\n        this.questions = response.data;\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the questions:\", error);\n      });\n  }\n}\n</script>\n\n<style>\n/* Стили компонента */\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;;uBAAjBC,mBAAA,CAEM,OAFNC,UAEM,I,kBADJD,mBAAA,CAAmFE,SAAA,QAFvFC,WAAA,CAEiCC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAzBC,YAAA,CAAmFC,mBAAA;MAA1CC,GAAG,EAAEH,QAAQ,CAACI,GAAG;MAAGJ,QAAQ,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}