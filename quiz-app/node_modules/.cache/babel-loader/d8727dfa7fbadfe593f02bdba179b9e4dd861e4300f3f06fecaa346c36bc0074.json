{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_Home = _resolveComponent(\"Home\");\n  const _component_Quiz = _resolveComponent(\"Quiz\");\n  const _component_Footer = _resolveComponent(\"Footer\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Header), _createCommentVNode(\" Шапка сайта \"), !$data.isTestStarted ? (_openBlock(), _createBlock(_component_Home, {\n    key: 0,\n    onStartTest: $options.startTest\n  }, null, 8 /* PROPS */, [\"onStartTest\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Приветственная страница \"), _createVNode(_component_Quiz, {\n    questions: $data.questions\n  }, null, 8 /* PROPS */, [\"questions\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" Компонент викторины \"), _createVNode(_component_Footer), _createCommentVNode(\" Подвал сайта \")]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Header","_createCommentVNode","$data","isTestStarted","_createBlock","_component_Home","key","onStartTest","$options","startTest","_Fragment","_component_Quiz","questions","_component_Footer"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <Header /> <!-- Шапка сайта -->\n    <Home v-if=\"!isTestStarted\" @startTest=\"startTest\" /> <!-- Приветственная страница -->\n    <Quiz v-else :questions=\"questions\" /> <!-- Компонент викторины -->\n    <Footer /> <!-- Подвал сайта -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Убедитесь, что axios импортирован\nimport Header from './components/AppHeader.vue';\nimport Home from './components/StartPage.vue';\nimport Quiz from './components/AppQuiz.vue';\nimport Footer from './components/AppFooter.vue';\n\nexport default {\n  name: 'QuizApp',\n  components: {\n    Header,\n    Home,\n    Quiz,\n    Footer\n  },\n  data() {\n    return {\n      isTestStarted: false,\n      questions: [],\n      currentQuestionIndex: 0, // Добавлен индекс текущего вопроса\n    };\n  },\n  methods: {\n    fetchQuestions() {\n      // Получаем индекс текущего вопроса\n      const index = this.currentQuestionIndex;\n\n      axios.get(`http://localhost:3000/api/questions?index=${index}`)\n        .then(response => {\n          this.questions = response.data;\n          this.currentQuestion = this.questions[0]; // Предполагаем, что сервер возвращает массив вопросов\n          // Вызов метода для перемешивания ответов, если он у вас есть\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the questions:\", error);\n        });\n    },\n    startTest() {\n      this.fetchQuestions(); // Запускаем загрузку вопросов при начале теста\n      this.isTestStarted = true; // Переключаем флаг только после начала загрузки вопросов\n    },\n    // Возможно, вам понадобятся другие методы для управления состоянием теста\n  },\n  // Подключаем метод fetchQuestions при создании компонента, если нужно загрузить вопросы сразу\n  mounted() {\n    // this.fetchQuestions();\n  },\n}\n</script>\n"],"mappings":";;;;;;uBACEA,mBAAA,CAKM,cAJJC,YAAA,CAAUC,iBAAA,GAACC,mBAAA,iBAAoB,E,CAClBC,KAAA,CAAAC,aAAa,I,cAA1BC,YAAA,CAAqDC,eAAA;IAHzDC,GAAA;IAGiCC,WAAS,EAAEC,QAAA,CAAAC;6DACxCX,mBAAA,CAAsCY,SAAA;IAJ1CJ,GAAA;EAAA,IAG0DL,mBAAA,6BAAgC,EACtFF,YAAA,CAAsCY,eAAA;IAAxBC,SAAS,EAAEV,KAAA,CAAAU;EAAS,uC,mDAAKX,mBAAA,yBAA4B,EACnEF,YAAA,CAAUc,iBAAA,GAACZ,mBAAA,kBAAqB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}