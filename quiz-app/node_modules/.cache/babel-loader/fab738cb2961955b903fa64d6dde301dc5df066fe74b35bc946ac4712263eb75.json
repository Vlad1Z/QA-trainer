{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Question = _resolveComponent(\"Question\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.currentQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.currentQuestion.question), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.currentQuestion.answers, (answer, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass({\n        correct: $data.isAnswerCorrect && $data.selectedAnswer === answer,\n        wrong: !$data.isAnswerCorrect && $data.selectedAnswer === answer\n      }),\n      onClick: $event => $options.selectAnswer(answer)\n    }, _toDisplayString(answer), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.isAnswerSelected ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($options.resultMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, question => {\n    return _openBlock(), _createBlock(_component_Question, {\n      key: question._id,\n      question: question\n    }, null, 8 /* PROPS */, [\"question\"]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","currentQuestion","_hoisted_2","_createElementVNode","_toDisplayString","question","_Fragment","_renderList","answers","answer","index","_normalizeClass","correct","isAnswerCorrect","selectedAnswer","wrong","onClick","$event","$options","selectAnswer","_hoisted_3","isAnswerSelected","_hoisted_4","resultMessage","_createCommentVNode","_hoisted_5","questions","_createBlock","_component_Question","_id"],"sources":["C:\\Users\\Vlad\\VScodeProjects\\quiz_refresh\\quiz-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"quiz\">\n    <div v-if=\"currentQuestion\">\n      <h2>{{ currentQuestion.question }}</h2>\n      <ul>\n        <li \n          v-for=\"(answer, index) in currentQuestion.answers\" \n          :key=\"index\" \n          :class=\"{ correct: isAnswerCorrect && selectedAnswer === answer, wrong: !isAnswerCorrect && selectedAnswer === answer }\"\n          @click=\"selectAnswer(answer)\"\n        >\n          {{ answer }}\n        </li>\n      </ul>\n      <p v-if=\"isAnswerSelected\">{{ resultMessage }}</p>\n    </div>\n    <div v-else>\n      <Question v-for=\"question in questions\" :key=\"question._id\" :question=\"question\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Question from './components/Question.vue'; // Указываем правильный путь\n\nexport default {\n  name: 'AppQuiz', // Имя компонента должно быть многословным\n  components: {\n    Question\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestion: null,\n      currentQuestionIndex: 0,\n      selectedAnswer: '',\n      isAnswerCorrect: false,\n      isAnswerSelected: false,\n    };\n  },\n  computed: {\n    resultMessage() {\n      return this.isAnswerCorrect ? 'Правильный ответ' : 'Неправильный ответ';\n    },\n  },\n  methods: {\n    fetchQuestions() {\n      axios.get('http://localhost:3000/api/questions') // Путь к вашему API\n        .then(response => {\n          this.questions = response.data;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the questions:\", error);\n        });\n    },\n    selectAnswer(answer) {\n      this.isAnswerSelected = true;\n      this.selectedAnswer = answer;\n      this.isAnswerCorrect = answer === this.currentQuestion.correct_answer;\n\n      // Логика перехода к следующему вопросу\n      if(this.isAnswerCorrect && this.currentQuestionIndex < this.questions.length - 1) {\n        setTimeout(() => {\n          this.currentQuestionIndex++;\n          this.currentQuestion = this.questions[this.currentQuestionIndex];\n          this.resetAnswer();\n        }, 2000); // задержка 2 секунды\n      }\n    },\n    resetAnswer() {\n      this.isAnswerSelected = false;\n      this.selectedAnswer = '';\n      this.isAnswerCorrect = false;\n    }\n  },\n  mounted() {\n    this.fetchQuestions();\n  }\n}\n</script>\n\n<style>\n.correct {\n  color: green;\n}\n\n.wrong {\n  color: red;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EADnBC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBOC,KAAA,CAAAC,eAAe,I,cAA1BH,mBAAA,CAaM,OAfVI,UAAA,GAGMC,mBAAA,CAAuC,YAAAC,gBAAA,CAAhCJ,KAAA,CAAAC,eAAe,CAACI,QAAQ,kBAC/BF,mBAAA,CASK,c,kBARHL,mBAAA,CAOKQ,SAAA,QAZbC,WAAA,CAMoCP,KAAA,CAAAC,eAAe,CAACO,OAAO,EAN3D,CAMkBC,MAAM,EAAEC,KAAK;yBADvBZ,mBAAA,CAOK;MALFD,GAAG,EAAEa,KAAK;MACVd,KAAK,EARhBe,eAAA;QAAAC,OAAA,EAQ6BZ,KAAA,CAAAa,eAAe,IAAIb,KAAA,CAAAc,cAAc,KAAKL,MAAM;QAAAM,KAAA,GAAUf,KAAA,CAAAa,eAAe,IAAIb,KAAA,CAAAc,cAAc,KAAKL;MAAM;MACpHO,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACV,MAAM;wBAExBA,MAAM,gCAXnBW,UAAA;oCAcepB,KAAA,CAAAqB,gBAAgB,I,cAAzBvB,mBAAA,CAAkD,KAdxDwB,UAAA,EAAAlB,gBAAA,CAcoCc,QAAA,CAAAK,aAAa,oBAdjDC,mBAAA,e,oBAgBI1B,mBAAA,CAEM,OAlBV2B,UAAA,I,kBAiBM3B,mBAAA,CAAmFQ,SAAA,QAjBzFC,WAAA,CAiBmCP,KAAA,CAAA0B,SAAS,EAArBrB,QAAQ;yBAAzBsB,YAAA,CAAmFC,mBAAA;MAA1C/B,GAAG,EAAEQ,QAAQ,CAACwB,GAAG;MAAGxB,QAAQ,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}